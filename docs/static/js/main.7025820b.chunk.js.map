{"version":3,"sources":["component/ChartPanel/index.js","component/ControlPanel/index.js","component/ChartContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["ChartPanel","props","state","getStateFromProps","_tooltipHtml","bind","_onChange","chartWidth","config","chartMargin","brushMargin","this","_getRange","data","minX","maxX","xScale","d3","time","scale","domain","range","left","right","xScaleBrush","prevProps","newState","setState","length","values","x","label","price","positives","neutrals","negatives","extent","chartHeight","brushHeight","width","height","margin","xAxis","tickValues","ticks","day","tickFormat","format","tooltipHtml","className","style","float","onChange","Component","useStyles","makeStyles","theme","createStyles","card","padding","cardTitle","textAlign","cardAction","ControlPanel","classes","useState","normFactor","setNormFactor","selectedTextblob","setSelectedTextblob","selectedSmall","setSelectedSmall","selectedLarge","setSelectedLarge","source","setSource","modelSelected","textblob","small","large","handleCheckChange","event","target","name","checked","Box","alignItems","justifyContent","Card","CardContent","TextField","input","type","fullWidth","inputProps","min","max","step","InputLabelProps","shrink","variant","value","e","CardActions","Button","size","onClick","FormControl","component","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","FormGroup","Checkbox","container","flexGrow","paper","spacing","color","palette","text","secondary","ChartContainer","initialData","chartData","stock","sentiment","setChartData","Grid","item","xs","map","el","y","push","Paper","TabPanel","index","other","role","hidden","id","root","backgroundColor","background","App","setValue","companies","Typography","align","AppBar","position","Tabs","newValue","company","idx","Tab","appData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","preprocessData","rawData","processed","isLarge","date","sent_score_textblob","sent_score_custom","positives_textblob","neutrals_textblob","negatives_textblob","positives_custom","neutrals_custom","negatives_custom","price_change","marketDate","split","Date","twitter","nytimes","toLowerCase","Promise","all","fetch","s","l","json","sdata","ldata","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7025820b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { LineChart, Brush, d3 } from 'react-d3-components';\n\nimport './index.scss';\n\nimport config from '../../config/config.json';\n\nexport class ChartPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n    this._tooltipHtml = this._tooltipHtml.bind(this);\n    this._onChange = this._onChange.bind(this);\n  }\n\n  getStateFromProps(props) {\n    const { chartWidth, chartMargin, brushMargin } = config;\n    const { minX, maxX } = this._getRange(props.data);\n    return {\n      data: props.data,\n      xScale: d3.time\n        .scale()\n        .domain([minX, maxX])\n        .range([0, chartWidth - chartMargin?.left - chartMargin?.right]),\n      xScaleBrush: d3.time\n        .scale()\n        .domain([minX, maxX])\n        .range([0, chartWidth - brushMargin?.left - brushMargin?.right]),\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const newState = this.getStateFromProps(this.props);\n      this.setState(this.getStateFromProps(newState));\n    }\n  }\n\n  _getRange(data) {\n    let minX, maxX;\n    if (data.length > 0) {\n      minX = data[0].values?.length > 0 ? data[0].values[0].x : 0;\n      maxX = data[0].values?.length > 0 ? data[0].values[data[0].values.length - 1].x : 0;\n    }\n    return { minX, maxX };\n  }\n\n  _tooltipHtml(label, data) {\n    if (label === 'stock') {\n      return <div>price: ${data.price}</div>;\n    } else {\n      return (\n        <div>\n          positives: {data.positives}\n          <br />\n          neutrals: {data.neutrals}\n          <br />\n          negatives: {data.negatives}\n        </div>\n      );\n    }\n  }\n\n  _onChange(extent) {\n    const { chartWidth, chartMargin } = config;\n    this.setState({\n      xScale: d3.time\n        .scale()\n        .domain([extent[0], extent[1]])\n        .range([0, chartWidth - chartMargin?.left - chartMargin?.right]),\n    });\n  }\n\n  render() {\n    const { chartWidth, chartHeight, chartMargin, brushHeight, brushMargin } = config;\n    const { minX, maxX } = this._getRange(this.state.data);\n\n    /*\n    const xScaleBrush = d3.time\n      .scale()\n      .domain([minX, maxX])\n      .range([0, chartWidth - brushMargin?.left - brushMargin?.right]); */\n\n    return (\n      <div>\n        <LineChart\n          data={this.state.data}\n          width={chartWidth}\n          height={chartHeight}\n          margin={chartMargin}\n          xScale={this.state.xScale}\n          xAxis={{\n            tickValues: this.state.xScale.ticks(d3.time.day, 2),\n            tickFormat: d3.time.format('%m/%d'),\n          }}\n          tooltipHtml={this._tooltipHtml}\n        />\n        <div className=\"brush\" style={{ float: 'none' }}>\n          <Brush\n            width={chartWidth}\n            height={brushHeight}\n            margin={brushMargin}\n            xScale={this.state.xScaleBrush}\n            extent={[minX, maxX]}\n            onChange={this._onChange}\n            xAxis={{\n              tickValues: this.state.xScaleBrush.ticks(d3.time.day, 2),\n              tickFormat: d3.time.format('%m/%d'),\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  TextField,\n  Button,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    card: {\n      width: 200,\n      padding: '8 16',\n    },\n    cardTitle: {\n      textAlign: 'center',\n    },\n    cardAction: {\n      textAlign: 'center',\n    },\n  })\n);\n\nexport const ControlPanel = (props) => {\n  const classes = useStyles();\n  const [normFactor, setNormFactor] = useState(1);\n  const [selectedTextblob, setSelectedTextblob] = useState(true);\n  const [selectedSmall, setSelectedSmall] = useState(true);\n  const [selectedLarge, setSelectedLarge] = useState(true);\n  const [source, setSource] = useState('twitter');\n  const modelSelected = {\n    textblob: selectedTextblob,\n    small: selectedSmall,\n    large: selectedLarge,\n  };\n\n  const handleCheckChange = (event) => {\n    modelSelected[event.target.name] = event.target.checked;\n    if (event.target.name === 'textblob') {\n      setSelectedTextblob(event.target.checked);\n    } else if (event.target.name === 'large') {\n      setSelectedLarge(event.target.checked);\n    } else {\n      setSelectedSmall(event.target.checked);\n    }\n    props.onChange({ normFactor, source, modelSelected });\n  };\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.defaultValue);\n    props.onChange({ normFactor, source: event.target.defaultValue, modelSelected });\n  };\n\n  const handleButtonClick = (event) => {\n    props.onChange({ normFactor, source, modelSelected });\n  };\n\n  return (\n    <Box alignItems=\"center\" justifyContent=\"center\">\n      <Card className={classes.card}>\n        <h3 className={classes.cardTitle}>Stock Movement</h3>\n        <CardContent>\n          <TextField\n            className={classes.input}\n            label=\"scaling adjustment\"\n            type=\"number\"\n            fullWidth={true}\n            inputProps={{ min: 1, max: 5, step: '0.1', style: { height: 5, textAlign: 'right' } }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            value={normFactor}\n            onChange={(e) => {\n              setNormFactor(+e.target.value);\n            }}\n          />\n        </CardContent>\n        <CardActions className={classes.cardAction}>\n          <Button size=\"small\" variant=\"outlined\" onClick={handleButtonClick}>\n            Apply\n          </Button>\n        </CardActions>\n      </Card>\n      <Card className={classes.card}>\n        <h3 className={classes.cardTitle}>Sentiment Analysis</h3>\n        <CardContent>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Source</FormLabel>\n            <RadioGroup defaultValue=\"twitter\" name=\"sentiment-model\" onChange={handleRadioChange}>\n              <FormControlLabel value=\"twitter\" control={<Radio />} label=\"Twitter\" />\n              <FormControlLabel value=\"nytimes\" control={<Radio />} label=\"NYTimes\" />\n            </RadioGroup>\n          </FormControl>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Model</FormLabel>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={handleCheckChange}\n                    checked={selectedTextblob}\n                    name=\"textblob\"\n                  />\n                }\n                label=\"TextBlob\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox onChange={handleCheckChange} checked={selectedSmall} name=\"small\" />\n                }\n                label=\"Custom (small)\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox onChange={handleCheckChange} checked={selectedLarge} name=\"large\" />\n                }\n                label=\"Custom (large)\"\n              />\n            </FormGroup>\n          </FormControl>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { ChartPanel } from '../ChartPanel';\nimport { ControlPanel } from '../ControlPanel';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nexport const ChartContainer = (props) => {\n  const classes = useStyles();\n  const initialData = [\n    { label: 'stock', values: props.chartData.stock },\n    { label: 'textblob', values: props.chartData.sentiment['twitter'].textblob },\n    { label: 'small', values: props.chartData.sentiment['twitter'].small },\n    { label: 'large', values: props.chartData.sentiment['twitter'].large },\n  ];\n  const [chartData, setChartData] = useState(initialData);\n\n  const onControlChange = (control) => {\n    const { normFactor, source, modelSelected } = control;\n    let data = [\n      {\n        label: 'stock',\n        values: props.chartData.stock.map((el) => {\n          return { ...el, y: el.y * normFactor };\n        }),\n      },\n    ];\n    if (modelSelected.textblob)\n      data.push({ label: 'textblob', values: props.chartData.sentiment[source].textblob });\n    if (modelSelected.small)\n      data.push({ label: 'small', values: props.chartData.sentiment[source].small });\n    if (modelSelected.large)\n      data.push({ label: 'large', values: props.chartData.sentiment[source].large });\n\n    setChartData(data);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={2}>\n          <ControlPanel onChange={onControlChange} />\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <ChartPanel data={chartData} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, AppBar, Tabs, Tab } from '@material-ui/core';\n\nimport { ChartContainer } from './component/ChartContainer';\n\nimport config from './config/config.json';\n\nfunction TabPanel(props) {\n  const { value, index, chartData, ...other } = props;\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`tabpanel-${index}`} {...other}>\n      {value === index && <ChartContainer chartData={chartData} />}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n    width: 1280,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function App(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { companies } = config;\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" align=\"center\">\n        Sentiment Analysis for Stockmarket\n      </Typography>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange}>\n          {companies.map((company, idx) => (\n            <Tab key={`tab-${idx}`} label={company} />\n          ))}\n        </Tabs>\n      </AppBar>\n      {companies.map((company, idx) => (\n        <TabPanel\n          key={`panel-${idx}`}\n          value={value}\n          index={idx}\n          chartData={props.appData[company]}\n        />\n      ))}\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst preprocessData = (rawData, processed = {}, isLarge = false) => {\n  rawData.map((data) => {\n    const {\n      date,\n      company,\n      source,\n      sent_score_textblob,\n      sent_score_custom,\n      positives_textblob,\n      neutrals_textblob,\n      negatives_textblob,\n      positives_custom,\n      neutrals_custom,\n      negatives_custom,\n      price,\n      price_change,\n    } = data;\n    let marketDate = date.split('-');\n    const x = new Date(`${marketDate[2]}-${marketDate[0]}-${marketDate[1]}T20:00:00.000Z`);\n    const initCompanyData = {\n      stock: [],\n      sentiment: {\n        twitter: {\n          textblob: [],\n          small: [],\n          large: []\n        },\n        nytimes: {\n          textblob: [],\n          small: [],\n          large: []\n        },\n      },\n    };\n    processed[company] = processed[company] || initCompanyData;\n    if (isLarge) {\n      processed[company].sentiment[source.toLowerCase()].large.push({\n        x,\n        y: sent_score_custom,\n        source,\n        positives: positives_custom,\n        neutrals: neutrals_custom,\n        negatives: negatives_custom,\n      });\n      return;\n    }\n    if (source === 'TWITTER') {\n      processed[company].stock.push({\n        x,\n        price,\n        y: price && price_change ? price_change / price : 0,\n      });\n    }\n\n    processed[company].sentiment[source.toLowerCase()].textblob.push({\n      x,\n      y: sent_score_textblob,\n      source,\n      positives: positives_textblob,\n      neutrals: neutrals_textblob,\n      negatives: negatives_textblob,\n    });\n\n    processed[company].sentiment[source.toLowerCase()].small.push({\n      x,\n      y: sent_score_custom,\n      source,\n      positives: positives_custom,\n      neutrals: neutrals_custom,\n      negatives: negatives_custom,\n    });\n  });\n  return processed;\n};\n\nPromise.all([fetch('data/aggregated.json'), fetch('data/aggregated_large.json')]) \n  .then(([s, l]) => Promise.all([s.json(), l.json()]))\n  .then(([sdata, ldata]) => {\n    const appData = preprocessData(sdata);\n    preprocessData(ldata, appData, true);\n    ReactDOM.render(<App appData={appData} />, document.getElementById('root'));\n  });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}