{"version":3,"sources":["component/ChartPanel/index.js","component/ControlPanel/index.js","component/ChartContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["ChartPanel","props","state","getInitialState","_tooltipHtml","bind","_onChange","chartWidth","config","chartMargin","brushMargin","this","_getRange","data","minX","maxX","xScale","d3","time","scale","domain","range","left","right","xScaleBrush","length","values","x","label","extent","setState","chartHeight","brushHeight","width","height","margin","xAxis","tickValues","ticks","day","tickFormat","format","tooltipHtml","className","style","float","onChange","Component","useStyles","makeStyles","theme","createStyles","paper","padding","spacing","textAlign","color","palette","text","secondary","ControlPanel","classes","handleChange","event","target","name","checked","Paper","TextField","type","fullWidth","inputProps","min","max","step","InputLabelProps","shrink","variant","FormControl","component","FormLabel","RadioGroup","defaultValue","aria-label","FormControlLabel","value","control","Radio","FormGroup","Checkbox","Button","size","container","flexGrow","ChartContainer","chartData","stock","sentiment","textblob","TWITTER","NYTIMES","Grid","item","xs","TabPanel","index","other","role","hidden","id","root","backgroundColor","background","App","useState","setValue","companies","AppBar","position","Tabs","newValue","map","company","idx","Tab","appData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fetch","r","json","rawData","processed","date","source","sent_score_textblob","sent_score_custom","positives_textblob","negatives_textblob","positives_custom","negatives_custom","price","price_change","marketDate","split","Date","custom","push","y","positives","negatives","preprocessData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46839eda.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { LineChart, Brush, d3 } from 'react-d3-components';\n\nimport './index.scss';\n\nimport config from '../../config/config.json';\n\nexport class ChartPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState(props);\n    this._tooltipHtml = this._tooltipHtml.bind(this);\n    this._onChange = this._onChange.bind(this);\n  }\n\n  getInitialState(props) {\n    const { chartWidth, chartMargin, brushMargin } = config;\n    const { minX, maxX } = this._getRange(props.data);\n    return {\n      data: props.data,\n      xScale: d3.time\n        .scale()\n        .domain([minX, maxX])\n        .range([0, chartWidth - chartMargin?.left - chartMargin?.right]),\n      xScaleBrush: d3.time\n        .scale()\n        .domain([minX, maxX])\n        .range([0, chartWidth - brushMargin?.left - brushMargin?.right]),\n    };\n  }\n\n  _getRange(data) {\n    let minX, maxX;\n    if (data.length > 0) {\n      minX = data[0].values?.length > 0 ? data[0].values[0].x : 0;\n      maxX = data[0].values?.length > 0 ? data[0].values[data[0].values.length - 1].x : 0;\n    }\n    return { minX, maxX };\n  }\n\n  _tooltipHtml(label, data) {\n    return 'this is a test';\n  }\n\n  _onChange(extent) {\n    const { chartWidth, chartMargin } = config;\n    this.setState({\n      xScale: d3.time\n        .scale()\n        .domain([extent[0], extent[1]])\n        .range([0, chartWidth - chartMargin?.left - chartMargin?.right]),\n    });\n  }\n\n  render() {\n    const { chartWidth, chartHeight, chartMargin, brushHeight, brushMargin } = config;\n    const { minX, maxX } = this._getRange(this.state.data);\n\n    /*\n    const xScaleBrush = d3.time\n      .scale()\n      .domain([minX, maxX])\n      .range([0, chartWidth - brushMargin?.left - brushMargin?.right]); */\n\n    return (\n      <div>\n        <LineChart\n          data={this.state.data}\n          width={chartWidth}\n          height={chartHeight}\n          margin={chartMargin}\n          xScale={this.state.xScale}\n          xAxis={{\n            tickValues: this.state.xScale.ticks(d3.time.day, 2),\n            tickFormat: d3.time.format('%m/%d'),\n          }}\n          tooltipHtml={this._tooltipHtml}\n        />\n        <div className=\"brush\" style={{ float: 'none' }}>\n          <Brush\n            width={chartWidth}\n            height={brushHeight}\n            margin={brushMargin}\n            xScale={this.state.xScaleBrush}\n            extent={[minX, maxX]}\n            onChange={this._onChange}\n            xAxis={{\n              tickValues: this.state.xScaleBrush.ticks(d3.time.day, 2),\n              tickFormat: d3.time.format('%m/%d'),\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nexport const ControlPanel = (props) => {\n  const classes = useStyles();\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <h3>Stock Movement</h3>\n        <div>\n          <TextField\n            label=\"normalization factor\"\n            type=\"number\"\n            fullWidth={true}\n            inputProps={{ min: '0', max: '2', step: '0.1' }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Paper>\n      <Paper className={classes.paper}>\n        <h3>Sentiment model</h3>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Sentiment</FormLabel>\n          <RadioGroup defaultValue=\"textblob\" aria-label=\"sentiment\" name=\"sentiment-model\">\n            <FormControlLabel value=\"textblob\" control={<Radio />} label=\"textblob\" />\n            <FormControlLabel value=\"custom\" control={<Radio />} label=\"custom\" />\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Source</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox onChange={handleChange} name=\"twitter\" />}\n              label=\"Twitter\"\n            />\n            <FormControlLabel\n              control={<Checkbox onChange={handleChange} name=\"nyt\" />}\n              label=\"NYT\"\n            />\n          </FormGroup>\n        </FormControl>\n      </Paper>\n      <Button size=\"small\">Update Chart</Button>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { ChartPanel } from '../ChartPanel';\nimport { ControlPanel } from '../ControlPanel';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nexport const ChartContainer = (props) => {\n  const classes = useStyles();\n  //const [chartData, setChartData] = useState(props.chartData);\n  const data = [\n    { label: 'stock', values: props.chartData.stock },\n    { label: 'twitter', values: props.chartData.sentiment.textblob.TWITTER },\n    { label: 'nytimes', values: props.chartData.sentiment.textblob.NYTIMES },\n  ];\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={2}>\n          <ControlPanel />\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <ChartPanel data={data} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { ChartContainer } from './component/ChartContainer';\nimport config from './config/config.json';\n\nfunction TabPanel(props) {\n  const { value, index, chartData, ...other } = props;\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`tabpanel-${index}`} {...other}>\n      {value === index && <ChartContainer chartData={chartData} />}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function App(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { companies } = config;\n\n  return (\n    <>\n      <h1>Sentiment Analysis for Stockmarket</h1>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange}>\n            {companies.map((company, idx) => (\n              <Tab id={`tab-${idx}`} label={company} />\n            ))}\n          </Tabs>\n        </AppBar>\n        {companies.map((company, idx) => (\n          <TabPanel value={value} index={idx} chartData={props.appData[company]} />\n        ))}\n      </div>\n    </>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst preprocessData = (rawData) => {\n  let processed = {};\n  rawData.map((data) => {\n    const {\n      date,\n      company,\n      source,\n      sent_score_textblob,\n      sent_score_custom,\n      positives_textblob,\n      negatives_textblob,\n      positives_custom,\n      negatives_custom,\n      price,\n      price_change,\n    } = data;\n    let marketDate = date.split('-');\n    const x = new Date(`${marketDate[2]}-${marketDate[0]}-${marketDate[1]}T20:00:00.000Z`);\n    const initCompanyData = {\n      stock: [],\n      sentiment: {\n        textblob: {\n          NYTIMES: [],\n          TWITTER: [],\n        },\n        custom: {\n          NYTIMES: [],\n          TWITTER: [],\n        },\n      },\n    };\n    processed[company] = processed[company] || initCompanyData;\n    if (source === 'TWITTER') {\n      processed[company].stock.push({\n        x,\n        price,\n        y: price && price_change ? price_change / price : 0,\n      });\n    }\n\n    processed[company].sentiment.textblob[source].push({\n      x,\n      y: sent_score_textblob,\n      positives: positives_textblob,\n      negatives: negatives_textblob,\n    });\n\n    processed[company].sentiment.custom[source].push({\n      x,\n      y: sent_score_custom,\n      positives: positives_custom,\n      negatives: negatives_custom,\n    });\n  });\n  return processed;\n};\n\nfetch('data/aggregated.json')\n  .then((r) => r.json())\n  .then((data) => {\n    const appData = preprocessData(data);\n    ReactDOM.render(\n      <React.StrictMode>\n        <App appData={appData} />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}