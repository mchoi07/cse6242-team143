{"version":3,"sources":["component/ChartPanel/index.js","component/ControlPanel/index.js","component/ChartContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["ChartPanel","props","state","getStateFromProps","_tooltipHtml","bind","_onChange","chartWidth","config","chartMargin","brushMargin","this","_getRange","data","minX","maxX","xScale","d3","time","scale","domain","range","left","right","xScaleBrush","prevProps","newState","setState","length","values","x","label","price","positives","negatives","extent","chartHeight","brushHeight","width","height","margin","xAxis","tickValues","ticks","day","tickFormat","format","tooltipHtml","className","style","float","onChange","Component","useStyles","makeStyles","theme","createStyles","paper","padding","spacing","textAlign","color","palette","text","secondary","ControlPanel","classes","useState","normFactor","setNormFactor","selectedTextblob","setSelectedTextblob","selectedCustom","setSelectedCustom","source","setSource","modelSelected","textblob","custom","handleCheckChange","event","target","name","checked","Paper","TextField","type","fullWidth","inputProps","min","max","step","InputLabelProps","shrink","variant","value","e","FormControl","component","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","FormGroup","Checkbox","Button","size","onClick","container","flexGrow","ChartContainer","initialData","chartData","stock","sentiment","setChartData","Grid","item","xs","map","el","y","push","TabPanel","index","other","role","hidden","id","root","backgroundColor","background","App","setValue","companies","AppBar","position","Tabs","newValue","company","idx","Tab","appData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fetch","r","json","rawData","processed","date","sent_score_textblob","sent_score_custom","positives_textblob","negatives_textblob","positives_custom","negatives_custom","price_change","marketDate","split","Date","twitter","nytimes","toLowerCase","preprocessData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68285b2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { LineChart, Brush, d3 } from 'react-d3-components';\n\nimport './index.scss';\n\nimport config from '../../config/config.json';\n\nexport class ChartPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n    this._tooltipHtml = this._tooltipHtml.bind(this);\n    this._onChange = this._onChange.bind(this);\n  }\n\n  getStateFromProps(props) {\n    const { chartWidth, chartMargin, brushMargin } = config;\n    const { minX, maxX } = this._getRange(props.data);\n    return {\n      data: props.data,\n      xScale: d3.time\n        .scale()\n        .domain([minX, maxX])\n        .range([0, chartWidth - chartMargin?.left - chartMargin?.right]),\n      xScaleBrush: d3.time\n        .scale()\n        .domain([minX, maxX])\n        .range([0, chartWidth - brushMargin?.left - brushMargin?.right]),\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const newState = this.getStateFromProps(this.props);\n      this.setState(this.getStateFromProps(newState));\n    }\n  }\n\n  _getRange(data) {\n    let minX, maxX;\n    if (data.length > 0) {\n      minX = data[0].values?.length > 0 ? data[0].values[0].x : 0;\n      maxX = data[0].values?.length > 0 ? data[0].values[data[0].values.length - 1].x : 0;\n    }\n    return { minX, maxX };\n  }\n\n  _tooltipHtml(label, data) {\n    if (label === 'stock') {\n      return <div>price: ${data.price}</div>;\n    } else {\n      return (\n        <div>\n          positives: {data.positives}\n          <br />\n          negatives: {data.negatives}\n        </div>\n      );\n    }\n  }\n\n  _onChange(extent) {\n    const { chartWidth, chartMargin } = config;\n    this.setState({\n      xScale: d3.time\n        .scale()\n        .domain([extent[0], extent[1]])\n        .range([0, chartWidth - chartMargin?.left - chartMargin?.right]),\n    });\n  }\n\n  render() {\n    const { chartWidth, chartHeight, chartMargin, brushHeight, brushMargin } = config;\n    const { minX, maxX } = this._getRange(this.state.data);\n\n    /*\n    const xScaleBrush = d3.time\n      .scale()\n      .domain([minX, maxX])\n      .range([0, chartWidth - brushMargin?.left - brushMargin?.right]); */\n\n    return (\n      <div>\n        <LineChart\n          data={this.state.data}\n          width={chartWidth}\n          height={chartHeight}\n          margin={chartMargin}\n          xScale={this.state.xScale}\n          xAxis={{\n            tickValues: this.state.xScale.ticks(d3.time.day, 2),\n            tickFormat: d3.time.format('%m/%d'),\n          }}\n          tooltipHtml={this._tooltipHtml}\n        />\n        <div className=\"brush\" style={{ float: 'none' }}>\n          <Brush\n            width={chartWidth}\n            height={brushHeight}\n            margin={brushMargin}\n            xScale={this.state.xScaleBrush}\n            extent={[minX, maxX]}\n            onChange={this._onChange}\n            xAxis={{\n              tickValues: this.state.xScaleBrush.ticks(d3.time.day, 2),\n              tickFormat: d3.time.format('%m/%d'),\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nexport const ControlPanel = (props) => {\n  const classes = useStyles();\n  const [normFactor, setNormFactor] = useState(1);\n  const [selectedTextblob, setSelectedTextblob] = useState(true);\n  const [selectedCustom, setSelectedCustom] = useState(true);\n  const [source, setSource] = useState('twitter');\n  const modelSelected = {\n    textblob: selectedTextblob,\n    custom: selectedCustom,\n  };\n\n  const handleCheckChange = (event) => {\n    modelSelected[event.target.name] = event.target.checked;\n    if (event.target.name === 'textblob') {\n      setSelectedTextblob(event.target.checked);\n    } else {\n      setSelectedCustom(event.target.checked);\n    }\n    props.onChange({ normFactor, source, modelSelected });\n  };\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.defaultValue);\n    props.onChange({ normFactor, source: event.target.defaultValue, modelSelected });\n  };\n\n  const handleButtonClick = (event) => {\n    props.onChange({ normFactor, source, modelSelected });\n  };\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <h3>Stock Movement</h3>\n        <div>\n          <TextField\n            label=\"normalization factor\"\n            type=\"number\"\n            fullWidth={true}\n            inputProps={{ min: '0', max: '2', step: '0.1' }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            value={normFactor}\n            onChange={(e) => {\n              setNormFactor(+e.target.value);\n            }}\n          />\n        </div>\n      </Paper>\n      <Paper className={classes.paper}>\n        <h3>Sentiment Analysis</h3>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Source</FormLabel>\n          <RadioGroup defaultValue=\"twitter\" name=\"sentiment-model\" onChange={handleRadioChange}>\n            <FormControlLabel value=\"twitter\" control={<Radio />} label=\"Twitter\" />\n            <FormControlLabel value=\"nytimes\" control={<Radio />} label=\"NYTimes\" />\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Source</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox onChange={handleCheckChange} checked={selectedTextblob} name=\"textblob\" />\n              }\n              label=\"TextBlob\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox onChange={handleCheckChange} checked={selectedCustom} name=\"custom\" />\n              }\n              label=\"Custom\"\n            />\n          </FormGroup>\n        </FormControl>\n      </Paper>\n      <Button size=\"small\" onClick={handleButtonClick}>\n        Update Chart\n      </Button>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { ChartPanel } from '../ChartPanel';\nimport { ControlPanel } from '../ControlPanel';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    container: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nexport const ChartContainer = (props) => {\n  const classes = useStyles();\n  const initialData = [\n    { label: 'stock', values: props.chartData.stock },\n    { label: 'textblob', values: props.chartData.sentiment['twitter'].textblob },\n    { label: 'custom', values: props.chartData.sentiment['twitter'].custom },\n  ];\n  const [chartData, setChartData] = useState(initialData);\n\n  const onControlChange = (control) => {\n    const { normFactor, source, modelSelected } = control;\n    let data = [\n      {\n        label: 'stock',\n        values: props.chartData.stock.map((el) => {\n          return { ...el, y: el.y * normFactor };\n        }),\n      },\n    ];\n    if (modelSelected.textblob)\n      data.push({ label: 'textblob', values: props.chartData.sentiment[source].textblob });\n    if (modelSelected.custom)\n      data.push({ label: 'custom', values: props.chartData.sentiment[source].custom });\n    setChartData(data);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={2}>\n          <ControlPanel onChange={onControlChange} />\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <ChartPanel data={chartData} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { ChartContainer } from './component/ChartContainer';\nimport config from './config/config.json';\n\nfunction TabPanel(props) {\n  const { value, index, chartData, ...other } = props;\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`tabpanel-${index}`} {...other}>\n      {value === index && <ChartContainer chartData={chartData} />}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function App(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { companies } = config;\n\n  return (\n    <>\n      <h1>Sentiment Analysis for Stockmarket</h1>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange}>\n            {companies.map((company, idx) => (\n              <Tab key={`tab-${idx}`} label={company} />\n            ))}\n          </Tabs>\n        </AppBar>\n        {companies.map((company, idx) => (\n          <TabPanel\n            key={`panel-${idx}`}\n            value={value}\n            index={idx}\n            chartData={props.appData[company]}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst preprocessData = (rawData) => {\n  let processed = {};\n  rawData.map((data) => {\n    const {\n      date,\n      company,\n      source,\n      sent_score_textblob,\n      sent_score_custom,\n      positives_textblob,\n      negatives_textblob,\n      positives_custom,\n      negatives_custom,\n      price,\n      price_change,\n    } = data;\n    let marketDate = date.split('-');\n    const x = new Date(`${marketDate[2]}-${marketDate[0]}-${marketDate[1]}T20:00:00.000Z`);\n    const initCompanyData = {\n      stock: [],\n      sentiment: {\n        twitter: {\n          textblob: [],\n          custom: [],\n        },\n        nytimes: {\n          textblob: [],\n          custom: [],\n        },\n      },\n    };\n    processed[company] = processed[company] || initCompanyData;\n    if (source === 'TWITTER') {\n      processed[company].stock.push({\n        x,\n        price,\n        y: price && price_change ? price_change / price : 0,\n      });\n    }\n\n    processed[company].sentiment[source.toLowerCase()].textblob.push({\n      x,\n      y: sent_score_textblob,\n      source,\n      positives: positives_textblob,\n      negatives: negatives_textblob,\n    });\n\n    processed[company].sentiment[source.toLowerCase()].custom.push({\n      x,\n      y: sent_score_custom,\n      source,\n      positives: positives_custom,\n      negatives: negatives_custom,\n    });\n  });\n  return processed;\n};\n\nfetch('data/aggregated.json')\n  .then((r) => r.json())\n  .then((data) => {\n    const appData = preprocessData(data);\n    ReactDOM.render(<App appData={appData} />, document.getElementById('root'));\n  });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}